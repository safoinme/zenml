name: Kubeflow

on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Use tmate session for debugging'
        required: false
        type: boolean
  workflow_call:

jobs:
  kubeflow_tests:
    name: kubeflow_tests
    runs-on: ubuntu-latest
    env:
      ZENML_DEBUG: 1
      ZENML_ANALYTICS_OPT_IN: false
      PYTHONIOENCODING: 'utf-8'

    steps:
      - uses: actions/checkout@v2

      # Workaround from FuseML (https://github.com/fuseml/fuseml/blob/main/.github/workflows/ci.yml)
      # as the TF images are too large for the GH action runner disk
      - name: Free disk space
        run: |
          echo "Available storage:"
          df -h
          echo
          echo -n "  Removing: .NET (frees ~22GB)"
          sudo rm -rf /usr/share/dotnet
          echo "... done"
          echo -n "  Removing: Android"
          sudo rm -rf /usr/local/lib/android
          echo "... done"
          echo
          echo "Available storage:"
          df -h

      - name: Setup environment with Poetry
        uses: ./.github/actions/setup_environment

      - name: Install K3D and kubectl
        run: |
          curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | bash
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          source $VENV
          zenml integration install kubeflow -f

      - name: Install Linux System Dependencies
        if: runner.os=='Linux'
        run: sudo apt install graphviz

      - name: Build docker image
        # this step can be much faster if we use an image that copies the
        # lockfile that was generated in the previous step
        run: docker build -t zenml-base-image:latest -f docker/base-dev.Dockerfile .

      - name: Setup tmate session
        if: ${{ github.event.inputs.tags }}
        uses: mxschmitt/action-tmate@v3

      - name: Run tests
        run: |
          source $VENV
          pytest tests/integration/test_examples.py -s --on-kubeflow --use-virtualenv
