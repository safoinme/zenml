[tool.poetry]
name = "zenml"
version = "0.32.1"
packages = [
    { include = "zenml", from = "src" },
]
description = "ZenML: Write production-ready ML code."
authors = ["ZenML GmbH <info@zenml.io>"]
readme = "README.md"
homepage = "https://zenml.io"
documentation = "https://docs.zenml.io"
repository = "https://github.com/zenml-io/zenml"
license = "Apache-2.0"
keywords = [
    "machine learning", "production", "pipeline", "mlops", "devops"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: System :: Distributed Computing",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
exclude = [
    "tests.*",
    "*.tests",
    "docs",
    "tests",
    "tests",
    "legacy",
    "*.tests.*",
    "examples"
]
include = [
    "src/zenml",
    "*.txt",
     "*.sh",
    "*.md"
]

[tool.poetry.scripts]
zenml = "zenml.cli.cli:cli"

[tool.poetry.dependencies]
pandas = "^1.1.5"
python = ">=3.7.1,<3.11"
docker = "~6.0.0"
pyyaml = "^5.4.1"
python-dateutil = "^2.8.1"
gitpython = "^3.1.18"
click = "^8.0.1"
click-params = "^0.3.0"
pydantic = "~1.9.0"
analytics-python = "^1.4.0"
distro = "^1.6.0"
rich = {extras = ["jupyter"], version = "^12.0.0"}
httplib2 = "<0.20,>=0.19.1"
pyparsing = "<3,>=2.4.0"
sqlmodel = "~0.0.8"
sqlalchemy_utils = "0.38.3"
passlib = { extras = ["bcrypt"], version = "~1.7.4"}
python-terraform = { version = "^0.10.1" }
pymysql = { version = "~1.0.2"}
alembic = { version = "~1.8.1"}

# Optional dependencies for the ZenServer
fastapi = { version = "~0.75.0", optional = true }
uvicorn = { extras = ["standard"], version = "~0.17.5",  optional = true}
python-multipart = { version = "~0.0.5", optional = true}
python-jose = { extras = ["cryptography"], version = "~3.3.0", optional = true}
fastapi-utils = { version = "~0.2.1", optional = true}

# optional dependencies for stack recipes

[tool.poetry.extras]
server = ["fastapi", "uvicorn", "python-multipart", "python-jose", "fastapi-utils"]

[tool.poetry.dev-dependencies]
black = "^22.3.0"
pytest = "^6.2.4"
mypy = "^0.991"
ruff = "^0.0.223"
coverage = { extras = ["toml"], version = "^5.5" }
pre-commit = "^2.14.0"
autoflake = "^1.4"
pyment = "^0.3.3"
tox = "^3.24.3"
hypothesis = "^6.43.1"
typing-extensions = ">=3.7.4"

# pytest dev dependencies
pytest-randomly = "^3.10.1"
pytest-mock = "^3.6.1"
pytest-clarity = "^1.0.1"
pytest-xdist = "^3.0.2"

# mkdocs including plugins
mkdocs="^1.2.3"
mkdocs-material="^8.1.7"
mkdocs-awesome-pages-plugin="^2.6.1"
mkdocstrings="^0.17.0"
mike="^1.1.2"

# mypy type stubs
types-certifi = "^2021.10.8.0"
types-croniter = "^1.0.2"
types-futures = "^3.3.1"
types-Markdown = "^3.3.6"
types-Pillow = "^9.2.1"
types-protobuf = "^3.18.0"
types-PyMySQL = "^1.0.4"
types-python-dateutil = "^2.8.2"
types-python-slugify = "^5.0.2"
types-PyYAML = "^6.0.0"
types-redis = "^4.1.19"
types-requests = "^2.27.11"
types-setuptools = "^57.4.2"
types-six = "^1.16.2"
types-termcolor = "^1.1.2"
types-psutil = "^5.8.13"

# test framework dependencies
docker-compose = "^1.28"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-version-plugin]
source = "init"

[tool.tox]
name = "ZenML"
authors = ["Hamza Tahir <hamza@zenml.io>"]
legacy_tox_ini = """
[tox]
isolated_build = True
skipsdist = true
envlist = py36,py37,py38,py39


[testenv]
whitelist_externals = poetry
commands =
    poetry install -v --extras all
    poetry run pytest tests
    poetry run bash scripts/mypy.sh --install-types
"""

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning",
]
log_cli = true
log_cli_level = "INFO"
testpaths = "tests"
xfail_strict = true

[tool.coverage.run]
parallel = true
source = [
    "src/zenml"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    'if __name__ == "__main__":',
    "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 79
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    '__init__.py',
    'src/zenml/cli/version.py',
]
per-file-ignores = {}
select = ["D", "E", "F", "I", "I001", "Q"]
ignore = ["E501", "F401", "F403", "D301", "D403", "D407", "D213", "D203", "S101", "S104", "S105", "S106", "S107"]
src = ["src", "test"]
# use Python 3.7 as the minimum version for autofixing
target-version = "py37"
ignore-init-module-imports = true
# Disable autofix for unused imports (`F401`).
unfixable = ["F401"]

[tool.ruff.flake8-import-conventions.aliases]
altair = "alt"
"matplotlib.pyplot" = "plt"
numpy = "np"
pandas = "pd"
seaborn = "sns"

[tool.ruff.mccabe]
max-complexity = 18

[tool.ruff.pydocstyle]
# Use Google-style docstrings.
convention = "google"

[tool.mypy]
strict = true
namespace_packages = true
show_error_codes = true

# temporary fix for python 3.8 https://github.com/apache/airflow/discussions/19006
# remove once the issue is solved in airflow
exclude = "airflow/"

[[tool.mypy.overrides]]
module = [
    "airflow.*",
    ]
follow_imports = "skip"

# end of fix

# import all google and transformers files as `Any`
[[tool.mypy.overrides]]
module = [
    "google.*" ,
    "transformers.*"  # https://github.com/huggingface/transformers/issues/13390
]
follow_imports = "skip"

[[tool.mypy.overrides]]
module = [
    "tensorflow.*",
    "apache_beam.*",
    "pandas.*",
    "ml_metadata.*",
    "distro.*",
    "analytics.*",
    "absl.*",
    "gcsfs.*",
    "s3fs.*",
    "adlfs.*",
    "fsspec.*",
    "torch.*",
    "pytorch_lightning.*",
    "sklearn.*",
    "numpy.*",
    "facets_overview.*",
    "IPython.core.*",
    "plotly.*",
    "graphviz.*",
    "dash.*",
    "dash_bootstrap_components.*",
    "dash_cytoscape",
    "dash.dependencies",
    "docker.*",
    "flask.*",
    "kfp.*",
    "kubernetes.*",
    "kserve.*",
    "urllib3.*",
    "kfp_server_api.*",
    "sagemaker.*",
    "azureml.*",
    "google.*",
    "neuralprophet.*",
    "lightgbm.*",
    "scipy.*",
    "deepchecks.*",
    "boto3.*",
    "botocore.*",
    "jupyter_dash.*",
    "slack_sdk.*",
    "azure-keyvault-keys.*",
    "model_archiver.*",
    "kfp_tekton.*",
    "mlflow.*",
    "python_terraform.*",
    "bentoml.*",
    "multipart.*",
    "jose.*",
    "fastapi_utils.*",
    "sqlalchemy_utils.*"
]
ignore_missing_imports = true

[tool.black]
line-length = 79
include = '\.pyi?$'
exclude = '''
/(
	\.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| _build
| buck-out
| build
)/
'''
